version: '3.7'
services:
  api:
    networks:
      - app_net
    image: harbor.tw.juiker.net/haunter/pix-v2:20230612
    restart: "always"
    command: -c /opt/pix/conf.d/
    volumes:
     - type: bind
       source: /opt/pix/
       target: /opt/pix/
     - type: bind
       source: ${MINIO_STORAGE_PATH}
       target: ${MINIO_STORAGE_PATH}
     - type: bind
       source: /var/log
       target: /var/log
     - type: bind
       source: /var/run/docker.sock
       target: /var/run/docker.sock
     - type: bind
       source: /etc/docker/daemon.json
       target: /etc/docker/daemon.json
     - type: bind
       source: /data/docker-data
       target: /data/docker-data
  nginx:
    networks:
      - app_net
    ports:
      - "443:443"
    image: harbor.tw.juiker.net/library/nginx:test2
    restart: "always"
    volumes:
      - type: bind
        source: /opt/pix/conf.d/
        target: /etc/nginx/conf.d/
      - type: bind
        source: /opt/pix/ssl/
        target: /opt/pix/ssl/
      - type: bind
        source: /opt/pix/nginx/
        target: /opt/pix/nginx/
      - type: volume
        source: nginx_log
        target: /var/log
  minio:
    networks:
      - app_net
    ports:
      - "9000:9000"
    image: harbor.tw.juiker.net/library/minio:RELEASE.2019-02-26T19-51-46Z
    restart: "always"
    command: server /data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - type: bind
        source: ${MINIO_STORAGE_PATH}
        target: /data
      - type: volume
        source: minio_log
        target: /var/log
  dockerhost:
    networks:
       app_net:
          ipv4_address: 172.16.238.55    
    image: harbor.tw.juiker.net/library/docker-host:2.5.4
    restart: "always"
    cap_add:
      - ALL
  im:
    networks:
      - app_net
    image: harbor.tw.juiker.net/iris/iris:TBB
    restart: "always"
    hostname: im
    command: run start
    volumes:
      - type: volume
        source: im_log
        target: /var/log/ejabberd/
        volume:
          nocopy: true
      - type: volume
        source: mnesia_data
        target: /var/lib/ejabberd/
        volume:
          nocopy: true
      - type: bind
        source: /opt/pix/ssl/
        target: /etc/ejabberd/cert/
    environment:
      XMPP_DOMAIN: ${XMPP_DOMAIN}
      ERLANG_NODE: ejabberd@im
      PEM_FILE: ${PEM_FILE}
      AUTH_DB: cassandra
      CASSANDRA_SERVER: ${CASSANDRA_SERVER}
      CASSANDRA_PORT: ${CASSANDRA_PORT}
      CASSANDRA_ACCOUNT: ${CASSANDRA_ACCOUNT}
      CASSANDRA_PASSWORD: ${CASSANDRA_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      IS_PIX_ENABLE: "true"
      PIX_STORAGE_ENDPOINT: ${PIX_STORAGE_ENDPOINT}
      PIX_GENERAL_DOMAIN: ${PIX_GENERAL_DOMAIN}
      PIX_PARAENT_DOMAIN: ${PIX_PARAENT_DOMAIN}
      AA_API_URL: ${AA_API_URL}
      AA_API_AUTH: ${AA_API_AUTH}
      CP_API_URL: ${CP_API_URL}
      CP_API_AUTH: ${CP_API_AUTH}
      API_HOST: ${API_HOST}
      API_USERNAME: ${API_USERNAME}
      API_PASSWORD: ${API_PASSWORD}
      PHONEBOOK_API_URL: ${PHONEBOOK_API_URL}
      PHONEBOOK_API_USERNAME: ${PHONEBOOK_API_USERNAME}
      PHONEBOOK_API_PASSWORD: ${PHONEBOOK_API_PASSWORD}
      CONTACTS_API_HOST: ${CONTACTS_API_HOST}
      CONTACTS_API_USERNAME: ${CONTACTS_API_USERNAME}
      CONTACTS_API_PASSWORD: ${CONTACTS_API_PASSWORD}
      PARENT_STUNE_API_URL: ${PARENT_STUNE_API_URL}
      STUNE_API_URL: ${STUNE_API_URL}
      STUNE_API_ACCOUNT: ${STUNE_API_ACCOUNT}
      STUNE_API_PASSWORD: ${STUNE_API_PASSWORD}
      NS_INFO_FROM_CASSANDRA: "true"
      NS_TYPE: ${NS_TYPE}
      NS_ENDPOINT: ${NS_ENDPOINT}
      NS_AUTH: ${NS_AUTH}
      APNS_MESG_TOPIC: ${APNS_MESG_TOPIC}
      APNS_VOIP_TOPIC: ${APNS_VOIP_TOPIC}
      MQ_ENABLE: "true"
      ##MQ_ENABLE: "false"
      MQ_HOST: ${JUIKER_MQ_HOST}
      MQ_PORT: 5671
      MQ_SSL_OPTIONS: '[]'
      MQ_ACCOUNT: ${JUIKER_MQ_USER}
      MQ_PASSWORD: ${JUIKER_MQ_PASSWORD}
      MQ_VIRTUAL_HOST: "juiker"
      QUEUE_NAME_NOTIFY_CLIENT: ${QUEUE_NAME_NOTIFY_CLIENT}
      QUEUE_NAME_USER_UUID: ${QUEUE_NAME_USER_UUID}
      QUEUE_NAME_BIND_STATUS: ${QUEUE_NAME_BIND_STATUS}
    ports:
      - "5222:5222"
      - "5269:5269"
    sysctls:
      - net.ipv4.tcp_keepalive_time=60
      - net.ipv4.tcp_keepalive_probes=3
      - net.ipv4.tcp_keepalive_intvl=20
  stune:
    networks:
      - app_net
    ports:
      - "8087:80"
    image: harbor.tw.juiker.net/scoke/scoke:PRO-8c807fcf610614184f6605408ce8d773bf7da24e
    restart: "always"
    depends_on:
      - dockerhost
    volumes:
      - type: bind
        source: /opt/pix/stune
        target: /run/secrets/stune
      - type: volume
        source: stune_log
        target: /var/log
  sorrel_sbcallinone:
    network_mode: host
    image: harbor.tw.juiker.net/sorrel/sbcallinone:2.2.1
    restart: "always"
    hostname: sorrel-sirens
    environment:
      VOICE_BRIDGE_PARENT_PEERNAME: ${VOICE_BRIDGE_PARENT_PEERNAME}
      PIX_GENERAL_DOMAIN: ${PIX_GENERAL_DOMAIN}
      VOICE_BRIDGE_PARENT_HOST: ${VOICE_BRIDGE_PARENT_HOST}
      VOICE_BRIDGE_PARENT_PORT: ${VOICE_BRIDGE_PARENT_PORT}
      VOICE_RTP_RANGE_START: ${VOICE_RTP_RANGE_START}
      VOICE_RTP_RANGE_END: ${VOICE_RTP_RANGE_END}
      VOICE_BRIDGE_PORT: ${VOICE_BRIDGE_PORT}
      VOICE_TLS_PORT: ${VOICE_TLS_PORT}
      VOICE_GENERAL_DBLISTEN_PORT: ${VOICE_GENERAL_DBLISTEN_PORT}
      VOICE_SELFDOMAIN: ${VOICE_SELFDOMAIN}
      VOICE_MYSQL_DOMAIN: 127.0.0.1
      VOICE_MYSQL_PORT: 3306
      SIP_REG_SERVER_DOMAIN: 60.199.173.11
      VOICE_RTP_BIND_ADDR: 60.199.173.11
      MAC_CUSTOMIZED: ${MAC_ADDRESS_STRING}
    depends_on:
      - dockerhost
    logging:
      driver: "json-file"
      options:
        max-size: "2g"
        max-file: "10"
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - type: volume
        source: sorrel_sbcallinone_log
        target: /var/log/asterisk
        volume:
          nocopy: true
      - type: bind
        source: /opt/pix/ssl/
        target: /etc/asterisk/keys/
  sorrel_rose:
    networks:
      - app_net
    image: harbor.tw.juiker.net/sorrel/rose:2.2.0
    restart: "always"
    hostname: sorrel-rose
    ports:
      - "4573:4573"
    depends_on:
      - dockerhost
      - sorrel_sbcallinone
    environment:
      SIP_TLS_PORT: ${VOICE_TLS_PORT}
      Federation.default.toDomain: ${FED_DEF_TO_DOMAIN}
      DO_RECORD_CALL: ${DO_RECORD_CALL}
      E_CORP_ID: ${E_CORP_ID}
      VOICE_GENERAL_DBLISTEN_PORT: ${VOICE_GENERAL_DBLISTEN_PORT}
      VOICE_SELFDOMAIN: ${VOICE_SELFDOMAIN}
    volumes:
      - type: volume
        source: sorrel_rose_log
        target: /var/log/asterisk/AGI
        volume:
          nocopy: true
  sorrel_api:
    networks:
      - app_net
    image: harbor.tw.juiker.net/sorrel/api:2.2.0
    restart: "always"
    hostname: sorrel-api
    environment:
      MY_ENV: ${SPECIAL_ENV}
      VOICE_GENERAL_DBLISTEN_PORT: ${VOICE_GENERAL_DBLISTEN_PORT}
      VOICE_SELFDOMAIN: ${VOICE_SELFDOMAIN}
    depends_on:
      - dockerhost
      - sorrel_sbcallinone
    volumes:
      - type: volume
        source: sorrel_api_log
        target: /var/log/asterisk/jetty
        volume:
          nocopy: true
  web:
    networks:
      - app_net
    image: harbor.tw.juiker.net/rib/rib-server:TFN-latest
    restart: "always"
    hostname: web
    environment:
      CP_ENV_SERVER_DOMAIN: ${XMPP_DOMAIN}
      CP_ENV_SERVER_PORT: 443
      #CP_ENV_MONGO_SERVER: 192.168.70.111:27017,192.168.70.112:27017,192.168.70.113:27017
      #CP_ENV_MONGO_REPLICA_SET: rstest
    depends_on:
      - dockerhost
    extra_hosts:
      - ${XMPP_DOMAIN}:172.16.238.55
networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24

volumes:
  volumes:
  mnesia_data:
  im_log:
  sorrel_rose_log:
  sorrel_sbcallinone_log:
  sorrel_api_log:
  dockerhost_log:
  nginx_log:
  minio_log:
  stune_log:
